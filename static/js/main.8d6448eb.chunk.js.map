{"version":3,"sources":["pages/Home.js","pages/Connect.js","pages/ConnectWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","src","alt","href","to","target","rel","TwitterOutlined","style","fontSize","marginTop","width","id","justify","marginBottom","span","ConnectButton","styled","WalletDialogButton","Connect","wallet","useWallet","useState","publicKey","setPublicKey","nfts","setNfts","hasBlackInk","setHasBlackInk","useEffect","verifyHolding","a","address","connect","createConnectionConfig","clusterApiUrl","process","getParsedNftAccountsByOwner","publicAddress","connection","serialization","nftArray","console","log","message","getNft","setCookie","value","cookies","Cookies","t","Date","setSeconds","getSeconds","set","expires","some","nft","data","symbol","open","severity","undefined","alertState","setAlertState","Container","maxWidth","position","Paper","padding","backgroundColor","borderRadius","connected","Snackbar","autoHideDuration","onClose","Alert","network","theme","createTheme","palette","type","ConnectWrapper","endpoint","useMemo","wallets","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wlBA+IeA,EAtIF,WAET,OACI,gCACI,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,eACPC,IAAI,kBAAkBC,IAAI,SAGlC,sBAAKF,UAAU,cAAf,UACI,mBAAGG,KAAK,QAAR,SACI,qBAAKH,UAAU,iBAAf,SACI,sBAAMA,UAAU,wBAAhB,sBAIR,mBAAGG,KAAK,WAAR,SACI,qBAAKH,UAAU,iBAAf,SACI,sBAAMA,UAAU,wBAAhB,0BAIR,mBAAGG,KAAK,WAAR,SACI,qBAAKH,UAAU,iBAAf,SACI,sBAAMA,UAAU,wBAAhB,0BAIR,mBAAGG,KAAK,OAAR,SACI,qBAAKH,UAAU,iBAAf,SACI,sBAAMA,UAAU,wBAAhB,qBAIR,cAAC,IAAD,CAAMI,GAAG,WAAT,SACI,qBAAKJ,UAAU,iBAAf,SACI,sBAAMA,UAAU,wBAAhB,mCAMZ,sBAAKA,UAAU,eAAf,UACI,mBAAGK,OAAO,SAASF,KAAK,mCAAmCG,IAAI,sBAA/D,SACI,qBAAKN,UAAU,OAAf,SACI,cAACO,EAAA,EAAD,CAAiBC,MAAO,CAACC,SAAU,QAASC,UAAW,YAI/D,mBAAGL,OAAO,SAASF,KAAK,8BAA8BG,IAAI,sBAA1D,SACI,qBAAKN,UAAU,OAAf,SACI,qBAAKC,IAAI,cAAcC,IAAI,UAAUM,MAAO,CAACG,MAAO,QAASD,UAAW,mBAOxF,sBAAKV,UAAU,OAAf,UACI,qBAAKY,GAAG,OAAOZ,UAAU,KAAzB,SACI,qBAAKC,IAAI,oBAAoBC,IAAI,iBAGrC,cAAC,IAAD,CAAKW,QAAQ,eAAeL,MAAO,CAACM,aAAc,QAASJ,UAAW,OAAtE,SACI,qBAAKE,GAAG,UAAUZ,UAAU,UAA5B,wBAGJ,eAAC,IAAD,CAAKa,QAAQ,eAAeL,MAAQ,CAACM,aAAc,QAAnD,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,qBAAKf,UAAU,YAAf,mPAKJ,cAAC,IAAD,CAAKe,KAAM,EAAX,SACI,qBAAKd,IAAI,oBAAoBC,IAAI,oBAIzC,qBAAKU,GAAG,UAAUX,IAAI,sBAAsBC,IAAI,YAEhD,cAAC,IAAD,CAAKW,QAAQ,eAAeL,MAAO,CAACM,aAAc,QAASJ,UAAW,OAAtE,SACI,qBAAKE,GAAG,MAAMZ,UAAU,UAAxB,mBAGJ,eAAC,IAAD,CAAKa,QAAQ,eAAeL,MAAO,CAACM,aAAc,OAAlD,UACI,eAAC,IAAD,CAAKC,KAAM,EAAX,UACQ,qBAAKf,UAAU,QAAf,qBAIA,qBAAKA,UAAU,QAAf,uIAIR,eAAC,IAAD,CAAKe,KAAM,EAAX,UACQ,qBAAKf,UAAU,QAAf,qCAIA,qBAAKA,UAAU,QAAf,wLAMZ,eAAC,IAAD,CAAKa,QAAQ,eAAeL,MAAO,CAACM,aAAc,OAAlD,UAEI,eAAC,IAAD,CAAKC,KAAM,EAAX,UACQ,qBAAKf,UAAU,QAAf,wBAIA,qBAAKA,UAAU,QAAf,kKAKR,eAAC,IAAD,CAAKe,KAAM,EAAX,UACQ,qBAAKf,UAAU,QAAf,4BAIA,qBAAKA,UAAU,QAAf,uL,0JCtHtBgB,EAAgBC,YAAOC,IAAPD,CAAH,sOAqIJE,MA1Hf,WAEI,IAAMC,EAASC,cAEf,EAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACNC,MACD,CAACL,IAEJI,qBAAU,WACNL,EAAaJ,EAAOG,aACrB,CAACH,EAAOG,YAEXM,qBAAU,WAAM,4CACZ,gCAAAE,EAAA,sEAEcC,EAAUT,EACVU,EAAWC,iCAAuBC,wBAAcC,iBAH9D,SAK+BC,sCAA4B,CAC/CC,cAAeN,EACfO,WAAYN,EACZO,eAAe,IAR3B,OAKcC,EALd,OAWQf,EAAQe,GAXhB,gDAcYC,QAAQC,IAAI,oCAAqC,KAAMC,SAdnE,0DADY,uBAAC,WAAD,wBAmBZC,KAED,CAACtB,IAGJ,IAAMuB,EAAY,SAACC,GACf,IAAMC,EAAU,IAAIC,IAChBC,EAAI,IAAIC,KACZD,EAAEE,WAAWF,EAAEG,aAAe,MAC9BL,EAAQM,IAAI,WAAYP,EAAO,CAACQ,QAASL,KAGvCpB,EAAa,uCAAG,sBAAAC,EAAA,sDAEEN,EAAK+B,MAAK,SAACC,GAC3B,MAA2BrB,aAApBqB,EAAIC,KAAKC,WAIhBb,EAAU,GACVlB,GAAe,IAGjBkB,EAAU,GAXM,2CAAH,qDAenB,EAAoCxB,mBAAS,CACzCsC,MAAM,EACNhB,QAAS,GACTiB,cAAUC,IAHd,mBAAOC,EAAP,KAAmBC,EAAnB,KAiCA,OACA,eAACC,EAAA,EAAD,CAAWzD,MAAO,CAAEE,UAAW,KAA/B,UACE,cAACuD,EAAA,EAAD,CAAWC,SAAS,KAAK1D,MAAO,CAAE2D,SAAU,YAA5C,SACE,eAACC,EAAA,EAAD,CACE5D,MAAO,CAAE6D,QAAS,GAAIC,gBAAiB,UAAWC,aAAc,GADlE,UAGE,qBAAKtE,IAAI,eAAeC,IAAI,cAhCzBkB,EAAOoD,UAKH7C,EAWD,gCACE,kFAEA,mGAZF,gCACE,iDAEA,mGATC,cAACX,EAAD,kCAoCb,cAACyD,EAAA,EAAD,CACEb,KAAMG,EAAWH,KACjBc,iBAAkB,IAClBC,QAAS,kBAAMX,EAAc,2BAAKD,GAAN,IAAkBH,MAAM,MAHtD,SAKE,cAACgB,EAAA,EAAD,CACED,QAAS,kBAAMX,EAAc,2BAAKD,GAAN,IAAkBH,MAAM,MACpDC,SAAUE,EAAWF,SAFvB,SAIGE,EAAWnB,gB,iFCtHhBiC,EAAUzC,eAGV0C,EAAQC,YAAY,CACxBC,QAAS,CACPC,KAAM,UA+BKC,MA3Bf,WACE,IAAMC,EAAWC,mBAAQ,kBAAMjD,wBAAc0C,KAAU,IAEjDQ,EAAUD,mBACd,iBAAM,CACJE,cACAC,cACAC,cACAC,YAAgB,CAAEZ,YAClBa,YAAyB,CAAEb,eAE7B,IAGF,OACE,cAACc,EAAA,EAAD,CAAeb,MAAOA,EAAtB,SACE,cAACc,EAAA,EAAD,CAAoBT,SAAUA,EAA9B,SACE,cAACU,EAAA,EAAD,CAAgBR,QAASA,EAASS,aAAW,EAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,aCvBGC,MArBf,WAEE,OACE,qBAAK/F,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgG,KAAK,WAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCLGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.8d6448eb.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Row } from 'antd';\nimport 'antd/dist/antd.css';\nimport \"../css/Home.css\";\nimport \"../css/Header.css\";\nimport { Link } from 'react-router-dom';\n\nimport {TwitterOutlined} from '@ant-design/icons';\n\nconst Home = () => {\n\n    return (\n        <div>\n            <div className=\"header\">\n                <img className=\"header__logo\" \n                        src=\"BlackInkAva.png\" alt=\"icon\">\n                </img>\n\n                <div className=\"header__nav\">\n                    <a href=\"#home\">\n                        <div className=\"header__option\">\n                            <span className=\"header__optionLineOne\">Home</span>\n                        </div>\n                    </a>\n\n                    <a href=\"#aboutus\">\n                        <div className=\"header__option\">\n                            <span className=\"header__optionLineOne\">About Us</span>\n                        </div>\n                    </a>\n\n                    <a href=\"#roadmap\">\n                        <div className=\"header__option\">\n                            <span className=\"header__optionLineOne\">Road Map</span>\n                        </div>\n                    </a>\n\n                    <a href=\"#faq\">\n                        <div className=\"header__option\">\n                            <span className=\"header__optionLineOne\">FAQ</span>\n                        </div>\n                    </a>\n\n                    <Link to=\"/connect\">\n                        <div className=\"header__option\">\n                            <span className=\"header__optionLineOne\">Connect Wallet</span>\n                        </div>\n                    </Link>\n\n                </div>\n\n                <div className='header__icon'>\n                    <a target=\"_blank\" href=\"https://twitter.com/blackInk_NFT\" rel=\"noopener noreferrer\">\n                        <div className=\"icon\">\n                            <TwitterOutlined style={{fontSize: '2.5vw', marginTop: '5%'}} />\n                        </div>\n                    </a>\n\n                    <a target=\"_blank\" href=\"https://discord.gg/RVNQSzqA\" rel=\"noopener noreferrer\">\n                        <div className='icon'>\n                            <img src='Discord.png' alt='Discord' style={{width: '2.5vw', marginTop: '15%'}}/>\n                        </div>\n                    </a>\n\n                </div>\n            </div>\n\n            <div className=\"home\"> \n                <div id=\"home\" className='bg'>\n                    <img src=\"BlackInkWebBg.png\" alt=\"background\"></img>   \n                </div>\n\n                <Row justify=\"space-around\" style={{marginBottom: '1.5vh', marginTop: '7vh'}}>\n                    <div id=\"aboutus\" className='BigFont'>About Us</div>\n                </Row>\n\n                <Row justify=\"space-around\" style= {{marginBottom: '14vh'}}>\n                    <Col span={9}>\n                        <div className='SmallFont'>                            \n                            Black Ink is a collection of 999 NFTs on the Solana blockchain.  You will gain access to our minting, sniping and AI bots. Also, holders will verify to be able to join the Black Ink DAO. Things will get exciting from then on...\n                        </div> \n                    </Col>\n\n                    <Col span={9}>\n                        <img src=\"NewCollection.png\" alt=\"collection\"></img>\n                    </Col>\n                </Row>\n\n                <img id=\"roadmap\" src=\"BlackInkRoadMap.png\" alt=\"roadmap\"></img>\n\n                <Row justify=\"space-around\" style={{marginBottom: '1.5vh', marginTop: '7vh'}}>\n                    <div id=\"faq\" className='BigFont'>FAQ</div>\n                </Row>\n\n                <Row justify=\"space-around\" style={{marginBottom: '7vh'}}>\n                    <Col span={6}>\n                            <div className='CardQ'> \n                                Supply?\n                            </div>\n\n                            <div className='CardA'> \n                                Given the fact we want our DAO to be as tightknit as possible there will only be 999 Black Ink NFTs available at mint.\n                            </div>\n                    </Col>\n                    <Col span={6}>\n                            <div className='CardQ'> \n                                What is the mint price?\n                            </div>\n\n                            <div className='CardA'>\n                                We would like to reward early supporters and so our mint price will be 0.7 SOL for the first 400 (Whitelist) This may change, then 1 SOL for the remaining 599 NFTs. \n                            </div>\n                    </Col>\n                </Row>\n\n                <Row justify=\"space-around\" style={{marginBottom: '7vh'}}>\n\n                    <Col span={6}>\n                            <div className='CardQ'> \n                                Mint Date?\n                            </div>\n\n                            <div className='CardA'>\n                                We have yet to decide on a mint date, largely due to current market and SOL conditions. We all update the discord on that decision in due course.\n                            </div>\n                    </Col>\n\n                    <Col span={6}>\n                            <div className='CardQ'> \n                                Wen Secondary?\n                            </div>\n\n                            <div className='CardA'>\n                                We will be putting in an application to be listed solely on Magic Eden, we understand the traffic that is seen on ME is far greater than any other platform.\n                            </div>\n                    </Col>\n                </Row>\n            \n            </div>    \n        </div>\n    );\n};\n\nexport default Home;","import React, {useEffect, useState} from 'react';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport styled from 'styled-components';\nimport Cookies from 'universal-cookie';\nimport './Connect.css'\n\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport { useWallet } from '@solana/wallet-adapter-react';\n\nimport { getParsedNftAccountsByOwner, createConnectionConfig } from \"@nfteyez/sol-rayz\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nfunction Connect() {\n\n    const wallet = useWallet();\n\n    const [publicKey, setPublicKey] = useState(null)\n    const [nfts, setNfts] = useState([])\n    const [hasBlackInk, setHasBlackInk] = useState(false)\n\n    useEffect(() => {\n        verifyHolding();\n    }, [nfts])\n\n    useEffect(() => {\n        setPublicKey(wallet.publicKey)\n    }, [wallet.publicKey])\n\n    useEffect(() => {\n        async function getNft() {\n            try {\n                const address = publicKey;\n                const connect =  createConnectionConfig(clusterApiUrl(process.env.REACT_APP_SOLANA_NETWORK));\n         \n                const nftArray = await getParsedNftAccountsByOwner({\n                    publicAddress: address,\n                    connection: connect,\n                    serialization: true,\n                  });\n    \n                setNfts(nftArray);\n\n              } catch (error) {\n                    console.log(\"Error thrown, while fetching NFTs\", error.message);\n              }\n        }\n\n        getNft();\n\n    }, [publicKey])\n\n\n    const setCookie = (value) => {\n        const cookies = new Cookies();\n        let t = new Date();\n        t.setSeconds(t.getSeconds() + 1800);\n        cookies.set('verified', value, {expires: t});\n      };\n\n    const verifyHolding = async () => {\n       \n        const hasBlackInk = nfts.some((nft) => {\n            return nft.data.symbol === process.env.REACT_APP_MINT_ID}\n        )\n\n        if (hasBlackInk) {\n            setCookie(1);\n            setHasBlackInk(true);\n        }\n        else {\n          setCookie(0);\n        }\n    }\n\n    const [alertState, setAlertState] = useState({\n        open: false,\n        message: '',\n        severity: undefined,\n      });\n\n    const renderButton = () => {\n        if (!wallet.connected) {\n            return <ConnectButton>Connect Wallet</ConnectButton>\n        }\n        else {\n            \n            if (!hasBlackInk) {\n              return (\n                <div>\n                  <div>Verify failed.</div> \n                  \n                  <div>You are currently not holding any Black Ink NFTs 😭</div> \n                </div>\n                )\n            }\n            else {\n                return (\n                <div>\n                  <div>You have connected to your wallet successfully.</div> \n                  \n                  <div>Open your Black Ink Minter bot and start minting 🚀</div> \n                </div>\n                )\n            }\n        }\n    }\n\n    return (\n    <Container style={{ marginTop: 100 }}>\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n        <Paper\n          style={{ padding: 24, backgroundColor: '#151A1F', borderRadius: 6 }}\n        > \n          <img src=\"BlackInk.png\" alt=\"Black Ink\"></img>\n          {renderButton()}\n        </Paper>\n      </Container>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n\nexport default Connect;\n","import React, {useMemo} from 'react';\nimport Connect from './Connect';\n\nimport { clusterApiUrl } from '@solana/web3.js';\n\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from '@solana/wallet-adapter-wallets';\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from '@solana/wallet-adapter-react';\n\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\n\nimport { ThemeProvider, createTheme } from '@material-ui/core';\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\n\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction ConnectWrapper() {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSolflareWallet(),\n      getSlopeWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    [],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletDialogProvider>\n            <Connect/>\n          </WalletDialogProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default ConnectWrapper;\n\n","import React from 'react';\nimport './css/App.css';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ConnectWrapper from './pages/ConnectWrapper';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/connect'>\n            <ConnectWrapper></ConnectWrapper>\n          </Route>\n\n          <Route path='/'>\n            <Home></Home>\n          </Route>\n\n          \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}